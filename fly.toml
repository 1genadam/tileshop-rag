# Fly.io configuration for Tileshop RAG production deployment
app = "tileshop-rag"
primary_region = "ord"
kill_signal = "SIGTERM"
kill_timeout = "30s"

[experimental]
  cmd = ["gunicorn", "--config", "gunicorn.conf.py", "dashboard_app:app"]

[build]
  dockerfile = "Dockerfile"

[env]
  NODE_ENV = "production"
  FLASK_ENV = "production"
  PORT = "8080"
  DEBUG = "false"
  PYTHONUNBUFFERED = "1"

# Persistent storage for scraped data and logs
[[mounts]]
  source = "tileshop_data"
  destination = "/app/storage"
  initial_size = "50gb"

# HTTP service configuration optimized for Tileshop RAG
[http_service]
  internal_port = 8080
  force_https = true
  auto_stop_machines = true
  auto_start_machines = true
  min_machines_running = 1
  processes = ["app"]

  [[http_service.checks]]
    grace_period = "30s"
    interval = "15s"
    method = "GET"
    path = "/api/system/health"
    port = 8080
    timeout = "10s"
    type = "http"

# Resource allocation optimized for data processing workloads
[vm]
  cpu_kind = "shared"
  cpus = 2
  memory = "4gb"

# Process configuration
[[processes]]
  name = "app"
  entrypoint = ["gunicorn", "--config", "gunicorn.conf.py", "dashboard_app:app"]

# Machine configuration for auto-scaling
[machine]
  restart_policy = "on-failure"

# Console command support
[console]
  command = "/bin/sh"

# Deploy configuration
[deploy]
  strategy = "rolling"