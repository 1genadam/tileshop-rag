name: Run Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: tileshop_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude="*_backup.py,temp/*,tmp/*"
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude="*_backup.py,temp/*,tmp/*"
    
    - name: Check code formatting with black
      run: |
        black --check --diff . --exclude=".*_backup\.py|temp/.*|tmp/.*"
    
    - name: Set up environment variables
      run: |
        echo "ANTHROPIC_API_KEY=test_key" >> .env
        echo "POSTGRES_HOST=localhost" >> .env
        echo "POSTGRES_PORT=5432" >> .env
        echo "POSTGRES_USER=postgres" >> .env
        echo "POSTGRES_PASSWORD=postgres" >> .env
        echo "POSTGRES_DB=tileshop_test" >> .env
        echo "TESTING=true" >> .env
    
    - name: Run tests with coverage
      run: |
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Test database operations
      run: |
        python -c "
        import psycopg2
        conn = psycopg2.connect(
            host='localhost',
            port=5432,
            database='tileshop_test',
            user='postgres',
            password='postgres'
        )
        print('Database connection successful')
        conn.close()
        "
    
    - name: Test scraper imports
      run: |
        python -c "
        try:
            from curl_scraper import main
            from dashboard_app import app
            from simple_rag import SimpleRAG
            print('All imports successful')
        except Exception as e:
            print(f'Import error: {e}')
            exit(1)
        "
    
    - name: Test environment configuration
      run: |
        python -c "
        import os
        from dotenv import load_dotenv
        load_dotenv()
        
        required_vars = [
            'POSTGRES_HOST',
            'POSTGRES_PORT', 
            'POSTGRES_USER',
            'POSTGRES_DB'
        ]
        
        missing = [var for var in required_vars if not os.getenv(var)]
        if missing:
            print(f'Missing environment variables: {missing}')
            exit(1)
        print('Environment configuration valid')
        "